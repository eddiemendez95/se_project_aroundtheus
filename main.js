!function(){"use strict";var e=class{constructor(e,t){var n,r,i;n=this,i=()=>this._inputEls.some((e=>!e.validity.valid)),(r=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(r="_hasInvalidInput"))in n?Object.defineProperty(n,r,{value:i,enumerable:!0,configurable:!0,writable:!0}):n[r]=i,this._inputSelector=e.inputSelector,this._submitButton=e.submitButton,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_setEventListeners(){this._inputEls=[...this._formElement.querySelectorAll(this._inputSelector)],this.buttonElement=this._formElement.querySelector(this._submitButton),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleSubmitBtn(this._inputEls,this.buttonElement)}))}))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}toggleSubmitBtn(){this._hasInvalidInput()?(this.buttonElement.classList.add(this._inactiveButtonClass),this.buttonElement.disabled=!0):(this.buttonElement.classList.remove(this._inactiveButtonClass),this.buttonElement.disabled=!1)}resetValidation(){this.toggleSubmitBtn()}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};function t(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var n=class{constructor(e,n,r){t(this,"_handleLikeIcon",(()=>{this._likeButton.classList.toggle("card__like-button_active")})),t(this,"_handleDeleteCard",(()=>{this._element.remove()})),this._name=e.name,this._link=e.link,this._cardTemplate=n,this._handleImageClick=r}_getTemplate(){return document.querySelector(this._cardTemplate).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._cardImage.addEventListener("click",(()=>this._handleImageClick(this._name,this._link))),this._cardDeleteButton.addEventListener("click",this._handleDeleteCard),this._likeButton.addEventListener("click",this._handleLikeIcon)}_openImageModal(){this._handleImageClick(this._name,this._link)}renderCard(){this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__like-button"),this._cardImage=this._element.querySelector(".card__image");const e=this._element.querySelector(".card__description-name");return this._cardDeleteButton=this._element.querySelector(".card__trash-button"),this._cardImage.src=this._link,this._cardImage.alt=this._name,e.textContent=this._name,this._setEventListeners(),this._element}};function r(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var i=class{constructor(e){let{popupSelector:t}=e;r(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),r(this,"_handleOverlay",(e=>{e.target.classList.contains("modal_opened")&&this.close()})),this._popup=document.querySelector(t)}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("mousedown",this._handleOverlay)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("mousedown",this._handleOverlay)}setEventListeners(){this._popup.addEventListener("click",(e=>{e.target.classList.contains("modal__close")&&this.close()}))}},s=class extends i{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popup.querySelector(".modal__form"),this._handleFormSubmit=t,this._formInputs=this._popup.querySelectorAll(".modal__input")}close(){this._popupForm.reset(),super.close()}_getInputValues(){const e={};return this._formInputs.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),this.close()}))}};const o={formSelector:".modal__form",inputSelector:".modal__input",submitButton:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},a=document.querySelector("#edit-modal"),l=document.querySelector("#add-card-modal"),c=a.querySelector(".modal__form"),u=l.querySelector(".modal__form"),m=document.querySelector(".profile__edit-button"),d=document.querySelector(".profile__add-button"),_=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),c.querySelector("#title-name")),p=c.querySelector("#description-name"),h=(u.querySelector(".modal__input_place"),u.querySelector(".modal__input_url"),document.querySelector(".cards__list")),v=new class{constructor(e){let{nameSelector:t,jobSelector:n}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(n)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){let{name:t,job:n}=e;this._nameElement.textContent=t,this._jobElement.textContent=n}}({nameSelector:".profile__title",jobSelector:".profile__description"}),f=new e(o,a),b=new e(o,l),y=new s("#edit-modal",(function(e){console.log(e),v.setUserInfo({name:e.title,job:e.description})})),E=new s("#add-card-modal",(function(e){w({name:e.place,link:e.url})})),g=new class extends i{constructor(e){super({popupSelector:e})}open(e,t){this._image=this._popup.querySelector(".modal__preview-image"),this._popup.querySelector(".modal__preview-description").textContent=e,this._image.src=t,this._image.alt=e,super.open()}}("#preview-image-modal",L),S=new class{constructor(e,t){let{items:n,renderer:r}=e;this._items=n,this._renderer=r,this._cardsList=t}renderItems(){this._items.forEach((e=>this._renderer(e)))}addItem(e){this._cardsList.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg "}],renderer:w},h);function w(e){const t=new n(e,"#card-template",L).renderCard();S.addItem(t)}function L(e,t){g.open(e,t)}f.enableValidation(),b.enableValidation(),y.setEventListeners(),E.setEventListeners(),g.setEventListeners(),S.renderItems(),m.addEventListener("click",(()=>{!function(){const e=v.getUserInfo();_.value=e.name,p.value=e.job,f.resetValidation(),y.open()}()})),d.addEventListener("click",(()=>{b.resetValidation(),E.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,